!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
前言	/Users/liam/myblog/icebug.github.io/source/_posts/技术/golang/golang 内存管理浅析.md	/^## 前言$/;"	function	line:11
How do I know whether a variable is allocated on the heap or the stack?	/Users/liam/myblog/icebug.github.io/source/_posts/技术/golang/golang 内存管理浅析.md	/^### How do I know whether a variable is allocated on the heap or the stack?$/;"	function	line:15
我们如何知道变量是分配在堆上还是栈上？	/Users/liam/myblog/icebug.github.io/source/_posts/技术/golang/golang 内存管理浅析.md	/^### 我们如何知道变量是分配在堆上还是栈上？$/;"	function	line:26
逃逸分析	/Users/liam/myblog/icebug.github.io/source/_posts/技术/golang/golang 内存管理浅析.md	/^## 逃逸分析$/;"	function	line:38
golang 逃逸分析示例	/Users/liam/myblog/icebug.github.io/source/_posts/技术/golang/golang 内存管理浅析.md	/^### golang 逃逸分析示例$/;"	function	line:46
内存分配	/Users/liam/myblog/icebug.github.io/source/_posts/技术/golang/golang 内存管理浅析.md	/^## 内存分配$/;"	function	line:92
`TCMalloc(Thread-caching Malloc)`	/Users/liam/myblog/icebug.github.io/source/_posts/技术/golang/golang 内存管理浅析.md	/^### `TCMalloc(Thread-caching Malloc)`$/;"	function	line:101
小对象内存分配（Small Object Allocation）	/Users/liam/myblog/icebug.github.io/source/_posts/技术/golang/golang 内存管理浅析.md	/^### 小对象内存分配（Small Object Allocation）$/;"	function	line:105
